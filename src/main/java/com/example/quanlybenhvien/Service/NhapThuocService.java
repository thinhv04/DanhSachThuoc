package com.example.quanlybenhvien.Service;

import com.example.quanlybenhvien.Dao.ThuocDao;
import com.example.quanlybenhvien.Dao.NhapThuocDao;
import com.example.quanlybenhvien.Dao.KhoThuocDao;
import com.example.quanlybenhvien.Dao.NhanVienDao;
import com.example.quanlybenhvien.Entity.NhapThuoc;
import com.example.quanlybenhvien.Entity.Thuoc;
import com.example.quanlybenhvien.Entity.KhoThuoc;
import com.example.quanlybenhvien.Entity.NhanVien;

import org.springframework.stereotype.Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import java.util.Optional;

@Service
public class NhapThuocService {
    @Autowired
    private ThuocDao thuocRepository;
    @Autowired
    private NhapThuocDao nhapThuocRepository;
    
    @Autowired
    private KhoThuocDao khoThuocRepository;

    @Autowired
    private NhanVienDao nhanVienRepository;
    
    @Transactional
    public NhapThuoc themNhapThuoc(NhapThuoc nhapThuoc) {
        System.out.println("üìå D·ªØ li·ªáu nh·∫≠p thu·ªëc: " + nhapThuoc);
        System.out.println("üîç M√£ nh√¢n vi√™n nh·∫≠n t·ª´ form: " + nhapThuoc.getNhanVien().getMaNhanVien());


        // üîç Ki·ªÉm tra nh√¢n vi√™n c√≥ t·ªìn t·∫°i kh√¥ng
        if (nhapThuoc.getNhanVien() == null || nhapThuoc.getNhanVien().getMaNhanVien() == null) {
            throw new RuntimeException("‚ö† Kh√¥ng t√¨m th·∫•y th√¥ng tin nh√¢n vi√™n!");
        }

        NhanVien nhanVien = nhanVienRepository.findById(nhapThuoc.getNhanVien().getMaNhanVien())
            .orElseThrow(() -> new RuntimeException("‚ö† Nh√¢n vi√™n kh√¥ng t·ªìn t·∫°i trong h·ªá th·ªëng!"));

        nhapThuoc.setNhanVien(nhanVien); // G√°n nh√¢n vi√™n t√¨m th·∫•y v√†o NhapThuoc

        // üîç Ki·ªÉm tra thu·ªëc c√≥ t·ªìn t·∫°i kh√¥ng
        Optional<Thuoc> optionalThuoc = thuocRepository.findById(nhapThuoc.getThuoc().getMaThuoc());
        if (optionalThuoc.isEmpty()) {
            throw new RuntimeException("‚ö† Thu·ªëc kh√¥ng t·ªìn t·∫°i! H√£y th√™m thu·ªëc tr∆∞·ªõc khi nh·∫≠p.");
        }

        nhapThuoc.setThuoc(optionalThuoc.get());

        // üî• L∆∞u v√†o b·∫£ng NHAPTHUOC
        NhapThuoc savedNhapThuoc = nhapThuocRepository.save(nhapThuoc);
        System.out.println("‚úÖ Thu·ªëc ƒë√£ ƒë∆∞·ª£c nh·∫≠p th√†nh c√¥ng v√†o NHAPTHUOC");

        // üîÑ C·∫≠p nh·∫≠t kho thu·ªëc
        Optional<KhoThuoc> optionalKhoThuoc = khoThuocRepository.findById(nhapThuoc.getThuoc().getMaThuoc());
        KhoThuoc khoThuoc;

        if (optionalKhoThuoc.isPresent()) {
            // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng thu·ªëc trong kho
            khoThuoc = optionalKhoThuoc.get();
            khoThuoc.setSoLuongHienCo(khoThuoc.getSoLuongHienCo() + nhapThuoc.getSoLuongNhap());
            System.out.println("üîÑ C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng thu·ªëc trong kho: " + khoThuoc.getSoLuongHienCo());
        } else {
            // N·∫øu thu·ªëc ch∆∞a c√≥ trong kho, th√™m m·ªõi
            khoThuoc = new KhoThuoc();
            khoThuoc.setMaThuoc(nhapThuoc.getThuoc().getMaThuoc());
            khoThuoc.setSoLuongHienCo(nhapThuoc.getSoLuongNhap());
            System.out.println("üÜï Th√™m thu·ªëc v√†o kho: " + khoThuoc.getSoLuongHienCo());
        }

        khoThuocRepository.save(khoThuoc);
        return savedNhapThuoc;
    }


    public List<NhapThuoc> getAllNhapThuoc() {
        List<NhapThuoc> list = nhapThuocRepository.findAll();
        System.out.println("üìå Danh s√°ch nh·∫≠p thu·ªëc: " + list);
        return list;
    }

}